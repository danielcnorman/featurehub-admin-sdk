=begin
#ManagementResourceApi

#This describes the API clients use for accessing features. This reflects the API from 1.5.7 onwards.

The version of the OpenAPI document: 1.1.11

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for FeaturehubAdminSdk::FeatureServiceApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FeatureServiceApi' do
  before do
    # run before each test
    @api_instance = FeaturehubAdminSdk::FeatureServiceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FeatureServiceApi' do
    it 'should create an instance of FeatureServiceApi' do
      expect(@api_instance).to be_instance_of(FeaturehubAdminSdk::FeatureServiceApi)
    end
  end

  # unit tests for create_features_for_application
  # add a new feature to this application, returns all features.
  # @param id The id of the application to find
  # @param feature 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :include_meta_data Include the metadata in the returned feature objects. Can be large.
  # @return [Array<Feature>]
  describe 'create_features_for_application test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_feature_for_application
  # updates all named features in this application, returns all features.
  # @param id The id of the application to find
  # @param key The named unique key of the associated feature
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :include_meta_data Include the metadata in the returned feature objects. Can be large.
  # @return [Array<Feature>]
  describe 'delete_feature_for_application test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for find_all_feature_and_feature_values_for_environments_by_application
  # Get a list of all environments and features and their values that this user has access to
  # @param id The id of the application to find
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter A filter to apply to the features - partial match of key or description
  # @option opts [Integer] :max The maximum number of features to get for this page
  # @option opts [Integer] :page The page number of the results. 0 indexed.
  # @option opts [Array<FeatureValueType>] :feature_types 
  # @option opts [SortOrder] :sort_order 
  # @return [ApplicationFeatureValues]
  describe 'find_all_feature_and_feature_values_for_environments_by_application test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_all_feature_values_by_application_for_key
  # Get a list of all environments and features and their values that this user has access to
  # @param id The id of the application to find
  # @param key The key of the associated feature
  # @param [Hash] opts the optional parameters
  # @return [Array<FeatureEnvironment>]
  describe 'get_all_feature_values_by_application_for_key test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_all_features_for_application
  # get all features available in this application
  # @param id The id of the application to find
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :include_meta_data Include the metadata in the returned feature objects. Can be large.
  # @return [Array<Feature>]
  describe 'get_all_features_for_application test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_feature_by_key
  # get an individual feature
  # @param id The id of the application to find
  # @param key The named unique key of the associated feature
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :include_meta_data Include the metadata in the returned feature objects. Can be large.
  # @return [Feature]
  describe 'get_feature_by_key test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_all_feature_values_by_application_for_key
  # Update a list of all environments and features and their values that this user has access to
  # @param id The id of the application to find
  # @param key The key of the associated feature
  # @param feature_value 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :remove_values_not_passed The id of the application to find
  # @return [Array<FeatureEnvironment>]
  describe 'update_all_feature_values_by_application_for_key test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_feature_for_application
  # updates all named features in this application, returns all features.
  # @param id The id of the application to find
  # @param key The named unique key of the associated feature
  # @param feature 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :include_meta_data Include the metadata in the returned feature objects. Can be large.
  # @return [Array<Feature>]
  describe 'update_feature_for_application test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
