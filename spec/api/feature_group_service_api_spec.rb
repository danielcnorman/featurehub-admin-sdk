=begin
#ManagementResourceApi

#This describes the API clients use for accessing features. This reflects the API from 1.5.7 onwards.

The version of the OpenAPI document: 1.1.11

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for FeaturehubAdminSdk::FeatureGroupServiceApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FeatureGroupServiceApi' do
  before do
    # run before each test
    @api_instance = FeaturehubAdminSdk::FeatureGroupServiceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FeatureGroupServiceApi' do
    it 'should create an instance of FeatureGroupServiceApi' do
      expect(@api_instance).to be_instance_of(FeaturehubAdminSdk::FeatureGroupServiceApi)
    end
  end

  # unit tests for create_feature_group
  # Get feature groups for this application
  # @param app_id The id of the application to find
  # @param feature_group_create 
  # @param [Hash] opts the optional parameters
  # @return [FeatureGroupListGroup]
  describe 'create_feature_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_feature_group
  # Delete this feature group
  # @param app_id The id of the application
  # @param fg_id The id of the feature group
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_feature_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_feature_group
  # Get feature groups for this application
  # @param app_id The id of the application
  # @param fg_id The id of the feature group
  # @param [Hash] opts the optional parameters
  # @return [FeatureGroup]
  describe 'get_feature_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_feature_group_features
  # Get feature groups for this application
  # @param app_id The id of the application
  # @param env_id The id of the feature group
  # @param [Hash] opts the optional parameters
  # @return [Array<FeatureGroupFeature>]
  describe 'get_feature_group_features test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_feature_groups
  # Get feature groups for this application
  # @param app_id The id of the application to find
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter A filter to apply to the features - partial match of key or description
  # @option opts [Integer] :max The maximum number of features to get for this page
  # @option opts [Integer] :page The page number of the results. 0 indexed.
  # @option opts [SortOrder] :sort_order 
  # @option opts [String] :environment_id Match based on environment id
  # @return [FeatureGroupList]
  describe 'list_feature_groups test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_feature_group
  # Get feature groups for this application
  # @param app_id The id of the application
  # @param fg_id The id of the feature group
  # @param feature_group_update 
  # @param [Hash] opts the optional parameters
  # @return [FeatureGroup]
  describe 'update_feature_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
