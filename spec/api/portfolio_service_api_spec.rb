=begin
#ManagementResourceApi

#This describes the API clients use for accessing features. This reflects the API from 1.5.7 onwards.

The version of the OpenAPI document: 1.1.11

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for FeaturehubAdminSdk::PortfolioServiceApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PortfolioServiceApi' do
  before do
    # run before each test
    @api_instance = FeaturehubAdminSdk::PortfolioServiceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PortfolioServiceApi' do
    it 'should create an instance of PortfolioServiceApi' do
      expect(@api_instance).to be_instance_of(FeaturehubAdminSdk::PortfolioServiceApi)
    end
  end

  # unit tests for create_portfolio
  # Create a new portfolio
  # @param portfolio 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :include_groups Include groups for this this portfolio in results
  # @option opts [Boolean] :include_applications Include applications for this portfolio in results
  # @return [Portfolio]
  describe 'create_portfolio test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_portfolio
  # Delete a portfolio
  # @param id The id of the portfolio to find
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :include_groups Include groups for this this portfolio in results
  # @option opts [Boolean] :include_applications Include applications for this portfolio in results
  # @option opts [Boolean] :include_environments Include the environments inside the applications
  # @return [Boolean]
  describe 'delete_portfolio test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for find_portfolios
  # Gets a list of portfolios.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :include_groups Include groups for this this portfolio in results
  # @option opts [Boolean] :include_applications Include applications for this portfolio in results
  # @option opts [SortOrder] :order how to order the results
  # @option opts [String] :filter What to filter the results by
  # @option opts [String] :parent_portfolio_id The parent portfolio to search under. If none is provided, use the top level one
  # @return [Array<Portfolio>]
  describe 'find_portfolios test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_portfolio
  # Get portfolio
  # @param id The id of the portfolio to find
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :include_groups Include groups for this this portfolio in results
  # @option opts [Boolean] :include_applications Include applications for this portfolio in results
  # @option opts [Boolean] :include_environments Include the environments inside the applications
  # @return [Portfolio]
  describe 'get_portfolio test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_portfolio
  # Update a portfolio
  # @param id The id of the portfolio to find
  # @param portfolio 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :include_groups Include groups for this this portfolio in results
  # @option opts [Boolean] :include_applications Include applications for this portfolio in results
  # @option opts [Boolean] :include_environments Include the environments inside the applications
  # @return [Portfolio]
  describe 'update_portfolio test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
