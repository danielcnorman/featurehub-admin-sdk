=begin
#ManagementResourceApi

#This describes the API clients use for accessing features. This reflects the API from 1.5.7 onwards.

The version of the OpenAPI document: 1.1.11

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

# Common files
require 'featurehub-admin-sdk/api_client'
require 'featurehub-admin-sdk/api_error'
require 'featurehub-admin-sdk/version'
require 'featurehub-admin-sdk/configuration'

# Models
require 'featurehub-admin-sdk/models/admin_service_reset_token_response'
require 'featurehub-admin-sdk/models/anemic_person'
require 'featurehub-admin-sdk/models/application'
require 'featurehub-admin-sdk/models/application_all_of'
require 'featurehub-admin-sdk/models/application_feature_values'
require 'featurehub-admin-sdk/models/application_group_role'
require 'featurehub-admin-sdk/models/application_role_type'
require 'featurehub-admin-sdk/models/application_summary'
require 'featurehub-admin-sdk/models/application_version_info'
require 'featurehub-admin-sdk/models/audit'
require 'featurehub-admin-sdk/models/audit_created_by'
require 'featurehub-admin-sdk/models/base_rollout_strategy'
require 'featurehub-admin-sdk/models/base_rollout_strategy_attribute'
require 'featurehub-admin-sdk/models/cache_refresh_request'
require 'featurehub-admin-sdk/models/cache_refresh_response'
require 'featurehub-admin-sdk/models/create_person_details'
require 'featurehub-admin-sdk/models/custom_rollout_strategy_violation'
require 'featurehub-admin-sdk/models/environment'
require 'featurehub-admin-sdk/models/environment_all_of'
require 'featurehub-admin-sdk/models/environment_feature_values'
require 'featurehub-admin-sdk/models/environment_features_result'
require 'featurehub-admin-sdk/models/environment_group_role'
require 'featurehub-admin-sdk/models/environment_sort_order'
require 'featurehub-admin-sdk/models/feature'
require 'featurehub-admin-sdk/models/feature_environment'
require 'featurehub-admin-sdk/models/feature_group'
require 'featurehub-admin-sdk/models/feature_group_crud_base'
require 'featurehub-admin-sdk/models/feature_group_create'
require 'featurehub-admin-sdk/models/feature_group_feature'
require 'featurehub-admin-sdk/models/feature_group_feature_value_strategy'
require 'featurehub-admin-sdk/models/feature_group_list'
require 'featurehub-admin-sdk/models/feature_group_list_feature'
require 'featurehub-admin-sdk/models/feature_group_list_group'
require 'featurehub-admin-sdk/models/feature_group_strategy'
require 'featurehub-admin-sdk/models/feature_group_update'
require 'featurehub-admin-sdk/models/feature_group_update_all_of'
require 'featurehub-admin-sdk/models/feature_group_update_feature'
require 'featurehub-admin-sdk/models/feature_history_item'
require 'featurehub-admin-sdk/models/feature_history_list'
require 'featurehub-admin-sdk/models/feature_history_value'
require 'featurehub-admin-sdk/models/feature_value'
require 'featurehub-admin-sdk/models/feature_value_type'
require 'featurehub-admin-sdk/models/group'
require 'featurehub-admin-sdk/models/group_all_of'
require 'featurehub-admin-sdk/models/hidden_environments'
require 'featurehub-admin-sdk/models/identity_provider_info'
require 'featurehub-admin-sdk/models/organization'
require 'featurehub-admin-sdk/models/organization_all_of'
require 'featurehub-admin-sdk/models/outstanding_registration'
require 'featurehub-admin-sdk/models/password_reset'
require 'featurehub-admin-sdk/models/password_update'
require 'featurehub-admin-sdk/models/person'
require 'featurehub-admin-sdk/models/person_id'
require 'featurehub-admin-sdk/models/person_info'
require 'featurehub-admin-sdk/models/person_registration_details'
require 'featurehub-admin-sdk/models/person_type'
require 'featurehub-admin-sdk/models/portfolio'
require 'featurehub-admin-sdk/models/portfolio_all_of'
require 'featurehub-admin-sdk/models/provider_redirect'
require 'featurehub-admin-sdk/models/registration_url'
require 'featurehub-admin-sdk/models/reset_api_key_type'
require 'featurehub-admin-sdk/models/role_type'
require 'featurehub-admin-sdk/models/rollout_strategy'
require 'featurehub-admin-sdk/models/rollout_strategy_all_of'
require 'featurehub-admin-sdk/models/rollout_strategy_attribute'
require 'featurehub-admin-sdk/models/rollout_strategy_attribute_all_of'
require 'featurehub-admin-sdk/models/rollout_strategy_attribute_conditional'
require 'featurehub-admin-sdk/models/rollout_strategy_collection_violation_type'
require 'featurehub-admin-sdk/models/rollout_strategy_field_type'
require 'featurehub-admin-sdk/models/rollout_strategy_info'
require 'featurehub-admin-sdk/models/rollout_strategy_instance'
require 'featurehub-admin-sdk/models/rollout_strategy_validation_request'
require 'featurehub-admin-sdk/models/rollout_strategy_validation_response'
require 'featurehub-admin-sdk/models/rollout_strategy_violation'
require 'featurehub-admin-sdk/models/rollout_strategy_violation_type'
require 'featurehub-admin-sdk/models/search_person'
require 'featurehub-admin-sdk/models/search_person_result'
require 'featurehub-admin-sdk/models/search_person_sort_by'
require 'featurehub-admin-sdk/models/service_account'
require 'featurehub-admin-sdk/models/service_account_permission'
require 'featurehub-admin-sdk/models/setup_missing_response'
require 'featurehub-admin-sdk/models/setup_response'
require 'featurehub-admin-sdk/models/setup_site_admin'
require 'featurehub-admin-sdk/models/shared_rollout_strategy_violation'
require 'featurehub-admin-sdk/models/sort_order'
require 'featurehub-admin-sdk/models/strategy_attribute_country_name'
require 'featurehub-admin-sdk/models/strategy_attribute_device_name'
require 'featurehub-admin-sdk/models/strategy_attribute_platform_name'
require 'featurehub-admin-sdk/models/strategy_attribute_well_known_names'
require 'featurehub-admin-sdk/models/tokenized_person'
require 'featurehub-admin-sdk/models/update_environment'
require 'featurehub-admin-sdk/models/update_person'
require 'featurehub-admin-sdk/models/user_credentials'
require 'featurehub-admin-sdk/models/webhook_check'
require 'featurehub-admin-sdk/models/webhook_detail'
require 'featurehub-admin-sdk/models/webhook_summary'
require 'featurehub-admin-sdk/models/webhook_summary_item'
require 'featurehub-admin-sdk/models/webhook_type_detail'
require 'featurehub-admin-sdk/models/webhook_type_details'

# APIs
require 'featurehub-admin-sdk/api/application_service_api'
require 'featurehub-admin-sdk/api/auth_service_api'
require 'featurehub-admin-sdk/api/cache_service_api'
require 'featurehub-admin-sdk/api/environment2_service_api'
require 'featurehub-admin-sdk/api/environment_feature_service_api'
require 'featurehub-admin-sdk/api/environment_service_api'
require 'featurehub-admin-sdk/api/feature_group_service_api'
require 'featurehub-admin-sdk/api/feature_history_service_api'
require 'featurehub-admin-sdk/api/feature_service_api'
require 'featurehub-admin-sdk/api/group_service_api'
require 'featurehub-admin-sdk/api/info_service_api'
require 'featurehub-admin-sdk/api/person_service_api'
require 'featurehub-admin-sdk/api/portfolio_service_api'
require 'featurehub-admin-sdk/api/rollout_strategy_service_api'
require 'featurehub-admin-sdk/api/service_account_service_api'
require 'featurehub-admin-sdk/api/setup_service_api'
require 'featurehub-admin-sdk/api/user_state_service_api'
require 'featurehub-admin-sdk/api/webhook_service_api'

module FeaturehubAdminSdk
  class << self
    # Customize default settings for the SDK using block.
    #   FeaturehubAdminSdk.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
